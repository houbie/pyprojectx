#!/usr/bin/env python3

##################################################################################
# Pyprojectx                                                                     #
# https://github.com/houbie/pyprojectx                                           #
#                                                                                #
# Copyright (c) 2021 Ivo Houbrechts                                              #
#                                                                                #
# Licensed under the MIT license                                                 #
##################################################################################
import os
import subprocess
import sys
from pathlib import Path
from venv import EnvBuilder

VERSION = "0.1.0"
PACKAGE = f"pyprojectx=={VERSION}"
PACKAGE = f"/Users/ihoubr/nikedev/repos/pyprojectx"

PYPROJECT = Path(__file__).with_name("pyproject.toml")
PYPROJECTX_HOME = Path(os.environ.get("PYPROJECTX_HOME", Path.home().joinpath(".pyprojectx")))
VERSIONS_DIR = PYPROJECTX_HOME.joinpath("versions")


def ensure_pyprojectx():
    install_dir = Path(VERSIONS_DIR, VERSION, f"py{sys.version_info.major}.{sys.version_info.minor}").absolute()
    env_builder = EnvBuilder(with_pip=True)
    env_context = env_builder.ensure_directories(install_dir)
    executable = Path(env_context.bin_path, "pyprojectx")
    if not executable.is_file():
        print("creating pyprojectx venv in %s ..." % install_dir, file=sys.stderr)
        env_builder.create(install_dir)
        subprocess.run(
            [env_context.env_exe, "-m", "pip", "install", "--upgrade", "pip"],
            stdout=sys.stderr,
            check=True,
        )

        print("installing pyprojectx %s ..." % VERSION, file=sys.stderr)
        pip = Path(env_context.bin_path, "pip3")
        subprocess.run([pip, "install", PACKAGE], stdout=sys.stderr, check=True)
    return executable


def run(pw_script, args):
    exe = ensure_pyprojectx()
    subprocess.run([exe, "--px-home", PYPROJECTX_HOME, "--px-wrapper", pw_script, *args], check=True)


if __name__ == "__main__":
    rc = 1
    try:
        run(sys.argv[0], sys.argv[1:])
        rc = 0
    finally:
        sys.exit(rc)
